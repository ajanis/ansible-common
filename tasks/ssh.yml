---
- name: Create /var/run/sshd
  ansible.builtin.file:
    state: directory
    path: /var/run/sshd
    mode: "0755"
  when:
    - ansible_os_family == "Debian"

- name: Update sshd config options
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    state: present
    regexp: ^(?:.+)?{{ item.option }}.*$
    line: "{{ item.option }} {{ item.value }}"
  loop:
    - option: Subsystem
      value: "{{ 'sftp /usr/libexec/openssh/sftp-server' if ansible_os_family == 'RedHat' else 'sftp /usr/lib/openssh/sftp-server' }}"
    - option: UsePAM
      value: "{{ 'no' if ansible_os_family == 'OpenBSD' else 'yes' }}"
    - option: Port
      value: "{{ sshd_listen_port | default('22') }}"
    - option: ListenAddress
      value: "{{ sshd_listen_address | default('0.0.0.0') }}"
    - option: SyslogFacility
      value: "{{ ssh_syslog_facility | default('AUTH') }}"
    - option: LogLevel
      value: "{{ ssh_log_level | default('INFO') }}"
    - option: PermitRootLogin
      value: "{{ sshd_permit_root_login | default('prohibit-password') }}"
    - option: PubkeyAuthentication
      value: "yes"
    - option: PasswordAuthentication
      value: "{{ sshd_password_authentication | default('yes') }}"
    - option: AuthorizedKeysFile
      value: "{{ authorized_keys_file | default('.ssh/authorized_keys') }}"
    - option: AllowAgentForwarding
      value: "yes"
    - option: X11Forwarding
      value: "yes"
    - option: PrintMotd
      value: "yes"
    - option: AcceptEnv
      value: LANG LC_*
  notify: Restart SSHD

- name: Add block configs to sshd_config
  ansible.builtin.blockinfile:
    path: /etc/ssh/sshd_config
    block: |
      {% if enable_ssh_host_rsa_key | default(True) %}
      HostKey /etc/ssh/ssh_host_rsa_key
      {% else %}
      #HostKey /etc/ssh/ssh_host_rsa_key
      {% endif %}
      {% if enable_ssh_host_dsa_key | default(True) %}
      HostKey /etc/ssh/ssh_host_dsa_key
      {% else %}
      #HostKey /etc/ssh/ssh_host_dsa_key
      {% endif %}
      {% if enable_ssh_host_ecdsa_key | default(True) %}
      HostKey /etc/ssh/ssh_host_ecdsa_key
      {% else %}
      #HostKey /etc/ssh/ssh_host_ecdsa_key
      {% endif %}
      {% if enable_ssh_host_ed25519_key | default(True) %}
      HostKey /etc/ssh/ssh_host_ed25519_key
      {% else %}
      #HostKey /etc/ssh/ssh_host_ed25519_key
      {% endif %}
      {% if groups['kvm'] is defined and inventory_hostname in groups['kvm'] %}
      Match user virsh
          X11Forwarding no
          AllowTcpForwarding no
          PermitTTY no
          ForceCommand nc -q 0 -U /var/run/libvirt/libvirt-sock
      {% endif %}
  notify: Restart SSHD

# - name: Copy sshd_config Template
#   template:
#     src: sshd_config.j2
#     dest: /etc/ssh/sshd_config
#     owner: root
#     group: root
#     mode: 0644
#   notify: "Restart SSHD"

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Restart ssh server
  ansible.builtin.service:
    name: "{{ ssh_service }}"
    state: restarted
    enabled: true
  register: ssh_started
  when: sshd_require_restart | default(false)

- name: Verify the sshd service is listening # noqa no-handler
  ansible.builtin.wait_for:
    host: localhost
    port: 22
    delay: 5
  when: ssh_started is changed
  ignore_errors: true
  register: ssh_start_attempt

- name: Get ssh journald logs if service does not appear to be up # noqa no-changed-when
  ansible.builtin.shell: journalctl _SYSTEMD_INVOCATION_ID=`systemctl show -p InvocationID --value {{ ssh_service }}.service`
  register: ssh_journal
  when: ssh_start_attempt.failed | default(false)

- name: Fail if ssh does not start
  ansible.builtin.fail:
    msg: "{{ ssh_journal.stdout_lines }}"
  when: ssh_start_attempt.failed | default(false)

- name: Configure authorized_keys for root user
  ansible.builtin.include_tasks:
    file: root-authkeys.yml
