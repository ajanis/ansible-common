- name: Update all installed packages (RHEL)
  when:
    - ansible_os_family == "RedHat"
  block:

    - name: Install EPEL Repo from upstream URL
      ansible.builtin.yum:
        name: "{{ epel_repo_rpm_url }}"
        disable_gpg_check: true
        update_cache: true
        state: present
        lock_timeout: 300
      timeout: 330
      retries: 0
      register: epel_setup
      until: epel_setup is not failed

    - name: Add EPEL GPG Key
      ansible.builtin.rpm_key:
        key: "{{ epel_gpgkey_path }}"
        state: present
        validate_certs: true
      register: epel_gpgkey
      until: epel_gpgkey is not failed

    - name: Update caches and installed packages (RHEL) # noqa package-latest
      ansible.builtin.dnf:
        name: '*'
        update_cache: true
        state: latest
        skip_broken: true
        nobest: true
        allowerasing: true
        allow_downgrade: true
        lock_timeout: 300
      register: dnf_update
      until: dnf_update is not failed
      timeout: 330
      retries: 0

    - name: Print dnf install debug
      ansible.builtin.debug:
        msg: "{{ dnf_update }}"
        verbosity: 1

    - name: Remove unnecessary packages and clean up package database (RHEL) # noqa package-latest
      ansible.builtin.dnf:
        autoremove: true
        state: absent
        update_cache: true
        skip_broken: true
        nobest: true
        allowerasing: true
        allow_downgrade: true
        lock_timeout: 300
      register: yum_clean
      timeout: 330
      retries: 0
      until: yum_clean is not failed

    - name: Print yum clean debug
      ansible.builtin.debug:
        msg: "{{ yum_clean }}"
        verbosity: 1

- name: Update all installed packages (Debian)
  when:
    - ansible_os_family == "Debian"
  block:
    - name: Stop Unattended Upgrades
      ansible.builtin.service:
        name: unattended-upgrades
        state: stopped

    - name: Update caches and installed packages, clean up package database (Debian) # noqa package-latest
      ansible.builtin.apt:
        name: "*"
        autoclean: true
        autoremove: true
        update_cache: true
        state: latest
        lock_timeout: 300
      register: apt_update
      until: apt_update is not failed
      timeout: 330
      retries: 0

    - name: Print apt upgrade debug
      ansible.builtin.debug:
        msg: "{{ apt_update }}"
        verbosity: 1

- name: Install pre-req and common packages, install common python requirements (All Distributions)
  block:
    - name: Install prereq packages
      ansible.builtin.package:
        name: "{{ common_prereq_pkgs }}"
        state: present
      when:
        - common_prereq_pkgs is defined
        - common_prereq_pkgs != None

    - name: Install common packages
      ansible.builtin.package:
        name: '{{ common_pkgs }}'
        state: present
      when:
        - common_pkgs is defined
        - common_pkgs != None

    - name: Uninstall any unwanted packages managed via OS package-manager (All Distributions)
      ansible.builtin.package:
        name: '{{ common_uninstall_pkgs }}'
        state: absent
      when:
        - common_uninstall_pkgs is defined
        - common_uninstall_pkgs != None

    - name: Install python requirements via Pip (All Distributions)
      ansible.builtin.pip:
        name: "{{ common_python_pkgs }}"
        state: present
      when:
        - common_python_pkgs is defined
        - common_python_pkgs != None
