---
- name: Update all installed packages (RHEL)
  when:
    - ansible_os_family == "RedHat"
  block:
    - name: Install EPEL Repo from upstream URL
      ansible.builtin.dnf:
        name: "{{ epel_repo_rpm_url }}"
        disable_gpg_check: true
        update_cache: true
        state: present
        lock_timeout: 300
      timeout: 0
      delay: 120
      retries: 10
      register: epel_setup
      until: epel_setup is not failed

    - name: Add EPEL GPG Key
      ansible.builtin.rpm_key:
        key: "{{ epel_gpgkey_path }}"
        state: present
        validate_certs: true
      register: epel_gpgkey
      until: epel_gpgkey is not failed
      retries: 10
      timeout: 0
      delay: 120

    - name: Update caches and installed packages (RHEL) # noqa package-latest
      ansible.builtin.dnf:
        update_cache: true
        allow_downgrade: true
        name: "{{ (common_prereq_pkgs | default([])) + (common_pkgs | default([])) }}"
        state: present
        lock_timeout: 300
      register: dnf_common
      retries: 10
      timeout: 0
      delay: 120
      until: dnf_common is not failed

    - name: Print dnf install debug
      ansible.builtin.debug:
        msg: "{{ dnf_common }}"
        verbosity: 1

    - name: Remove unwanted packages and clean up package database (RHEL) # noqa package-latest
      ansible.builtin.dnf:
        name: "{{ common_uninstall_pkgs | default([]) }}"
        state: absent
        autoremove: true
        lock_timeout: 300
      register: dnf_cleanup
      until: dnf_cleanup is not failed
      retries: 10
      timeout: 0
      delay: 120

    - name: Print dnf_cleanup debug
      ansible.builtin.debug:
        msg: "{{ dnf_cleanup }}"
        verbosity: 1

- name: Update all installed packages (Debian)
  when:
    - ansible_os_family == "Debian"
  block:
    - name: Update caches and installed packages, clean up package database (Debian) # noqa package-latest
      ansible.builtin.apt:
        update_cache: true
        allow_downgrade: true
        autoclean: true
        name: "{{ (common_prereq_pkgs | default([])) + (common_pkgs | default([])) }}"
        state: present
        update_cache_retries: 10
        update_cache_retry_max_delay: 60
        lock_timeout: 300
      register: apt_common
      until: apt_common is not failed
      retries: 10
      timeout: 0
      delay: 120

    - name: Print apt_common debug
      ansible.builtin.debug:
        msg: "{{ apt_common }}"
        verbosity: 1

    - name: Remove unwanted packages and clean up the package database (Debian) # noqa package-latest
      ansible.builtin.apt:
        update_cache: true
        autoclean: true
        autoremove: true
        name: "{{ common_uninstall_pkgs | default([]) }}"
        state: absent
        update_cache_retries: 10
        update_cache_retry_max_delay: 60
        lock_timeout: 300
      register: apt_cleanup
      until: apt_cleanup is not failed
      retries: 10
      timeout: 0
      delay: 120

    - name: Print apt_cleanup debug
      ansible.builtin.debug:
        msg: "{{ apt_cleanup }}"
        verbosity: 1

- name: Install python requirements via Pip (All Distributions)
  ansible.builtin.pip:
    name: "{{ common_python_pkgs }}"
    state: present
  register: common_py_pkgs
  until: common_py_pkgs is not failed
  retries: 5
  timeout: 1200
  delay: 60
  when:
    - common_python_pkgs is defined
    - common_python_pkgs != None
